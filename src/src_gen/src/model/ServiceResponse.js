/*
 * CTF Management API
 * API for managing CTF (Capture The Flag) games, teams, users, and services.
 *
 * OpenAPI spec version: 1.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.60
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The ServiceResponse model module.
 * @module model/ServiceResponse
 * @version 1.1.0
 */
export default class ServiceResponse {
  /**
   * Constructs a new <code>ServiceResponse</code>.
   * @alias module:model/ServiceResponse
   * @class
   * @param id {String} Unique identifier for the service
   * @param name {String} Name of the service
   * @param author {String} Author of the service
   * @param isPublic {Boolean} Boolean indicating if the service is public
   */
  constructor(id, name, author, isPublic) {
    this.id = id;
    this.name = name;
    this.author = author;
    this.isPublic = isPublic;
  }

  /**
   * Constructs a <code>ServiceResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ServiceResponse} obj Optional instance to populate.
   * @return {module:model/ServiceResponse} The populated <code>ServiceResponse</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ServiceResponse();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('author'))
        obj.author = ApiClient.convertToType(data['author'], 'String');
      if (data.hasOwnProperty('logo_url'))
        obj.logoUrl = ApiClient.convertToType(data['logo_url'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('is_public'))
        obj.isPublic = ApiClient.convertToType(data['is_public'], 'Boolean');
    }
    return obj;
  }
}

/**
 * Unique identifier for the service
 * @member {String} id
 */
ServiceResponse.prototype.id = undefined;

/**
 * Name of the service
 * @member {String} name
 */
ServiceResponse.prototype.name = undefined;

/**
 * Author of the service
 * @member {String} author
 */
ServiceResponse.prototype.author = undefined;

/**
 * URL to the logo of the service
 * @member {String} logoUrl
 */
ServiceResponse.prototype.logoUrl = undefined;

/**
 * A brief description of the service
 * @member {String} description
 */
ServiceResponse.prototype.description = undefined;

/**
 * Boolean indicating if the service is public
 * @member {Boolean} isPublic
 */
ServiceResponse.prototype.isPublic = undefined;

